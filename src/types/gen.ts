/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/login": {
    /** Login with email and password to obtain a token */
    post: operations["login"];
  };
  "/googleAuth": {
    /** Authenticate with Google using access token */
    post: operations["googleAuth"];
  };
  "/signup": {
    /** Add a new user with first name, last name, email, phone, and password */
    post: operations["signup"];
  };
  "/verifyEmail": {
    /** Verify user's email using OTP and user ID */
    post: operations["verifyEmail"];
  };
  "/getAuthToken": {
    /** Get Auth Token */
    post: operations["getAuthToken"];
  };
  "/resetPassword": {
    /** Reset User Password Using */
    post: operations["resetPassword"];
  };
  "/forgetPassword": {
    /** Forget User Password Using */
    post: operations["forgetPassword"];
  };
  "/resendOtp": {
    /** Resend Otp incase he didn't receive the email */
    post: operations["resendOtp"];
  };
  "/logout": {
    /** Logout */
    post: operations["logout"];
  };
  "/user": {
    /** Get User Details */
    get: operations["getUserDetails"];
    /** Update User Details */
    patch: operations["updateUser"];
  };
  "/switch-account": {
    /** switch user */
    post: operations["switchAccount"];
  };
  "/upload-image": {
    /** Get User Details */
    post: operations["uploadImage"];
  };
  "/company": {
    /** get all company accounts */
    get: operations["getCompany"];
    /** create company account */
    post: operations["createCompany"];
    /** Update an existing company account */
    patch: operations["updateCompany"];
  };
  "/company/{id}": {
    /** get Single Company */
    get: operations["getSingleCompany"];
  };
  "/event": {
    /** Get details of all events */
    get: operations["getAllEvents"];
    /** Create Event */
    post: operations["createEvent"];
  };
  "/event/joinhistory": {
    /** Event Join History */
    get: operations["eventJoinHistory"];
  };
  "/event/completed": {
    /** Event Completed */
    post: operations["eventCompleted"];
  };
  "/event/{id}": {
    /** Get details of single event */
    get: operations["getSingleEvent"];
    /** Delete a Event by ID */
    delete: operations["deleteEvent"];
  };
  "/event/company-events": {
    get: operations["getEventsByCompanyId"];
  };
  "/event/{eventId}/user-reviews": {
    get: operations["getEventReviews"];
  };
  "/event/{eventId}/is-joined/{userId}": {
    /** Check if already join this event */
    get: operations["checkEventJoined"];
  };
  "/event/{eventId}/join/{userId}": {
    /** Join this event */
    post: operations["joinEvent"];
  };
  "/event/{eventId}/invite": {
    /** Get all event invites */
    get: operations["getAllEventInvites"];
  };
  "/event/my-friends-join": {
    /** Get all events join by my friends */
    get: operations["getEventJoinByFriends"];
  };
  "/event/{eventId}/invite/{senderId}/{receiverId}/{milestoneId}": {
    /** Send invitation to friend to join this event */
    post: operations["inviteFriendEventJoin"];
  };
  "/event/{eventId}/invite/{inviteId}/accept-reject/{status}": {
    /** Accept or reject event join invitation */
    post: operations["inviteEventAcceptReject"];
  };
  "/event/{eventId}/milestone-completed": {
    /** Get list of milestones completed for this event for logged user */
    get: operations["getEventMilestonesCompleted"];
  };
  "/event/{eventId}/milestone-complete/{milestoneId}": {
    /** Complete milestone */
    post: operations["completeMilestoneInviteFriend"];
  };
  "/event/{eventId}/milestone-skip/{milestoneId}": {
    /** Skip milestone */
    post: operations["skipMilestoneInviteFriend"];
  };
  "/event/{eventId}/milestone-datetime-complete/{milestoneId}": {
    /** Complete datetime milestone */
    post: operations["completeMilestoneDateTime"];
  };
  "/event/{eventId}/milestone-checkin/{milestoneId}": {
    /** User will manually checkin when he/she reach at event location */
    post: operations["checkInEvent"];
  };
  "/event/{eventId}/milestone-make-photo/{milestoneId}": {
    /** Complete make photo milestone */
    post: operations["completeMilestoneMakePhoto"];
  };
  "/event/{eventId}/milestone-review/{milestoneId}": {
    /** Complete review milestone */
    post: operations["completeMilestoneReview"];
  };
  "/comment/{eventId}": {
    /** Get All comments */
    get: operations["getAllComments"];
    post: operations["createComment"];
  };
  "/like-event/{eventId}": {
    post: operations["addNewLike"];
  };
  "/favorite-event/{eventId}": {
    post: operations["addNewFavoriteEvent"];
  };
  "/milestone": {
    /** Get details of all milestones */
    get: operations["getAllMilestones"];
    /** create Milestone by super admin */
    post: operations["createMilestone"];
  };
  "/milestone/{id}": {
    /** get Milestone */
    get: operations["getSingleMilestone"];
    /** Delete a Milestone by ID */
    delete: operations["deleteMilestone"];
    /** update Milestone by super admin */
    patch: operations["updateMilestone"];
  };
  "/tag": {
    /** Get All tags */
    get: operations["getAllTags"];
    /** create tag */
    post: operations["createTag"];
  };
  "/event-type": {
    /** Get All Event types */
    get: operations["getAllEventType"];
    /** create net event type by super admin */
    post: operations["createEventType"];
  };
  "/event-type/{id}": {
    /** get Single EventType */
    get: operations["getSingleEventType"];
    /** Delete a EventType by ID */
    delete: operations["deleteEventType"];
    /** updateEventType */
    patch: operations["updateEventType"];
  };
  "/theme": {
    /** Get details of all milestones */
    get: operations["getAllThemes"];
    /** create a new theme by super admin */
    post: operations["createTheme"];
  };
  "/theme/{id}": {
    /** get Theme */
    get: operations["getSingleTheme"];
    /** Delete Theme by ID */
    delete: operations["deleteTheme"];
    /** update Theme by super admin */
    patch: operations["updateTheme"];
  };
  "/easy": {
    /** Get details of all easy event */
    get: operations["getAllEasyEvent"];
    /** Create easy event */
    post: operations["createEasyEvent"];
  };
  "/contact-list": {
    /** List all contacts */
    get: operations["getAllContacts"];
  };
  "/friend-list": {
    /** Get all friend list */
    get: operations["getAllFriends"];
  };
  "/friend-requests": {
    /** Get all friend requests */
    get: operations["getAllFriendRequests"];
  };
  "/friend-add": {
    /** Create a new friend */
    post: operations["createNewFriend"];
  };
  "/friend-delete/{id}": {
    /** Delete a Friend by ID */
    delete: operations["deleteFriend"];
  };
  "/friend-response/{id}/{status}/{notificationId}": {
    /** Accept or reject friend request */
    post: operations["friendAcceptReject"];
  };
  "/user-details/{id}": {
    /** Contact Details */
    get: operations["getContactDetailsById"];
  };
  "/notifications": {
    /** Get all user notification */
    get: operations["getNotification"];
  };
  "/shop": {
    /** Get all shops */
    get: operations["getShop"];
  };
}

export interface components {
  schemas: {
    LoginResponse: {
      token?: string;
      id?: string;
      firstName?: string;
      lastName?: string;
      email?: string;
      phone?: string;
    };
    VerificationResponse: {
      unVerified?: boolean;
    };
  };
}

export interface operations {
  /** Login with email and password to obtain a token */
  login: {
    responses: {
      /** Successful login */
      200: {
        content: {
          "application/json":
            | components["schemas"]["LoginResponse"]
            | components["schemas"]["VerificationResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** User email */
          email?: string;
          /** User Id token */
          idToken?: string;
          /** User device token */
          deviceToken?: string;
        };
      };
    };
  };
  /** Authenticate with Google using access token */
  googleAuth: {
    responses: {
      /** Successful authentication */
      200: {
        content: {
          "application/json": {
            token?: string;
            id?: string;
            firstName?: string;
            lastName?: string;
            email?: string;
            phone?: string;
            isExisting?: boolean;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** Google id token */
          idToken?: string;
          /** User device token */
          deviceToken?: string;
        };
      };
    };
  };
  /** Add a new user with first name, last name, email, phone, and password */
  signup: {
    responses: {
      /** User added successfully */
      200: {
        content: {
          "application/json": {
            userId?: string;
            token?: string;
            email?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** User's email */
          email?: string;
          /** User's email */
          idToken?: string;
          /** User's Password */
          password?: string;
          /** User's device token for push notifications */
          deviceToken?: string;
        };
      };
    };
  };
  /** Verify user's email using OTP and user ID */
  verifyEmail: {
    responses: {
      /** Email verified successfully */
      200: {
        content: {
          "application/json": {
            id?: string;
            email?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** OTP sent to user's email */
          otp?: string;
          /** User Id */
          userId?: string;
        };
      };
    };
  };
  /** Get Auth Token */
  getAuthToken: {
    responses: {
      /** Email verified successfully */
      200: {
        content: {
          "application/json": {
            token?: string;
            id?: string;
            email?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** User Id */
          userId?: string;
          /** Id Token of User */
          idToken?: string;
        };
      };
    };
  };
  /** Reset User Password Using */
  resetPassword: {
    responses: {
      /** Email verified successfully */
      200: {
        content: {
          "application/json": {
            success?: boolean;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** users password */
          password?: string;
          /** users email */
          email?: string;
          /** OTP code sent on user email */
          otp?: string;
        };
      };
    };
  };
  /** Forget User Password Using */
  forgetPassword: {
    responses: {
      /** Email Sent successfully */
      200: {
        content: {
          "application/json": {
            success?: boolean;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** users email */
          email?: string;
        };
      };
    };
  };
  /** Resend Otp incase he didn't receive the email */
  resendOtp: {
    responses: {
      /** Email verified successfully */
      200: {
        content: {
          "application/json": {
            success?: boolean;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** User's email */
          email?: string;
        };
      };
    };
  };
  /** Logout */
  logout: {
    responses: {
      /** Logout */
      200: {
        content: {
          "application/json": {
            msg?: string;
          };
        };
      };
    };
  };
  /** Get User Details */
  getUserDetails: {
    responses: {
      /** Get user details successfully */
      200: {
        content: {
          "application/json": {
            id?: string;
            firstName?: string;
            lastName?: string;
            email?: string;
            phone?: string;
            createdAt?: string;
            updatedAt?: string;
            userName?: string;
            gender?: string;
            dateOfBirth?: string;
            tags?: string[];
          };
        };
      };
    };
  };
  /** Update User Details */
  updateUser: {
    responses: {
      /** Update User Details successfully */
      200: {
        content: {
          "application/json": {
            firstName?: string;
            lastName?: string;
            email?: string;
            phone?: string;
            createdAt?: string;
            updatedAt?: string;
            userName?: string;
            gender?: string;
            dateOfBirth?: string;
            photoUrl?: string;
            about?: string;
            xp?: number;
            companyId?: string;
            allowPeopleToConnect?: boolean;
            pushAlerts?: boolean;
            hasCompleteProfile?: boolean;
            address?: string;
            profession?: string;
            tags?: string[];
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** OTP sent to user's email */
          userName?: string;
          firstName?: string;
          lastName?: string;
          dateOfBirth?: string;
          gender?: string;
          photoUrl?: string;
          about?: string;
          xp?: number;
          companyId?: string;
          phone?: string;
          allowPeopleToConnect?: boolean;
          pushAlerts?: boolean;
          hasCompleteProfile?: boolean;
          address?: string;
          profession?: string;
          tags?: string[];
        };
      };
    };
  };
  /** switch user */
  switchAccount: {
    parameters: {
      query: {
        /** ID of company account to get details (optional) */
        id?: string;
      };
    };
    responses: {
      /** Update User Details successfully */
      200: {
        content: {
          "application/json": {
            firstName?: string;
            lastName?: string;
            email?: string;
            phone?: string;
            createdAt?: string;
            updatedAt?: string;
            userName?: string;
            gender?: string;
            dateOfBirth?: string;
            photoUrl?: string;
            about?: string;
            xp?: number;
            companyId?: string;
            allowPeopleToConnect?: boolean;
            pushAlerts?: boolean;
            address?: string;
            profession?: string;
          };
        };
      };
    };
  };
  /** Get User Details */
  uploadImage: {
    responses: {
      /** Get user details successfully */
      200: {
        content: {
          "application/json": {
            imageUrl?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          image?: string;
        };
      };
    };
  };
  /** get all company accounts */
  getCompany: {
    responses: {
      /** Get company details successfully */
      200: {
        content: {
          "application/json": {
            userId?: string;
            creatorType?: string;
            name?: string;
            email?: string;
            registeredNumber?: string;
            position?: string;
            phone?: string;
            bestDescribeYou?: string;
            shortDescription?: string;
            country?: string;
            city?: string;
            street?: string;
            houseNumber?: string;
            addition?: string;
            postalCode?: string;
            photoUrl?: string;
            followers?: number;
            events?: number;
            xp?: number;
          }[];
        };
      };
    };
  };
  /** create company account */
  createCompany: {
    responses: {
      /** Created company account successfully */
      200: {
        content: {
          "application/json": {
            userId?: string;
            creatorType?: string;
            name?: string;
            email?: string;
            registeredNumber?: string;
            position?: string;
            phone?: string;
            bestDescribeYou?: string;
            shortDescription?: string;
            country?: string;
            city?: string;
            street?: string;
            houseNumber?: string;
            addition?: string;
            postalCode?: string;
            photoUrl?: string;
            followers?: number;
            events?: number;
            xp?: number;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** id of user who created this company */
          userId?: string;
          /** createrType weather is creator or busiuness */
          creatorType?: string;
          /** company name */
          name?: string;
          /** company email address */
          email?: string;
          /** Company registration number */
          registeredNumber?: string;
          /** Company position */
          position?: string;
          /** Company phone number */
          phone?: string;
          /** Best Describe the Company */
          bestDescribeYou?: string;
          /** Short Company description */
          shortDescription?: string;
          /** Company address detail */
          country?: string;
          city?: string;
          street?: string;
          houseNumber?: string;
          addition?: string;
          postalCode?: string;
          /** Profile image url */
          photoUrl?: string;
          /** Numbers of followers */
          followers?: number;
          /** Numbers of events organize by this comapny */
          events?: number;
          /** Numbers of xp (coupans) comapny have */
          xp?: number;
        };
      };
    };
  };
  /** Update an existing company account */
  updateCompany: {
    responses: {
      /** Company account updated successfully */
      200: {
        content: {
          "application/json": {
            userId?: string;
            creatorType?: string;
            name?: string;
            email?: string;
            registeredNumber?: string;
            position?: string;
            phone?: string;
            bestDescribeYou?: string;
            shortDescription?: string;
            country?: string;
            city?: string;
            street?: string;
            houseNumber?: string;
            addition?: string;
            postalCode?: string;
            photoUrl?: string;
            followers?: number;
            events?: number;
            xp?: number;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** ID of the user who created this company */
          userId?: string;
          /** Creator type whether it's a creator or business */
          creatorType?: string;
          /** Company name */
          name?: string;
          /** Company email address */
          email?: string;
          /** Company registration number */
          registeredNumber?: string;
          /** Company position */
          position?: string;
          /** Company phone number */
          phone?: string;
          /** Best way to describe the company */
          bestDescribeYou?: string;
          /** Short company description */
          shortDescription?: string;
          /** Company address details */
          country?: string;
          city?: string;
          street?: string;
          houseNumber?: string;
          addition?: string;
          postalCode?: string;
          /** Profile image URL */
          photoUrl?: string;
          /** Number of followers */
          followers?: number;
          /** Number of events organized by this company */
          events?: number;
          /** Number of XP (coupons) the company has */
          xp?: number;
        };
      };
    };
  };
  /** get Single Company */
  getSingleCompany: {
    parameters: {
      path: {
        /** ID of comapny to get details */
        id: string;
      };
    };
    responses: {
      /** Company retrieved successfully */
      200: {
        content: {
          "application/json": {
            userId?: string;
            creatorType?: string;
            name?: string;
            email?: string;
            registeredNumber?: string;
            position?: string;
            phone?: string;
            bestDescribeYou?: string;
            shortDescription?: string;
            country?: string;
            city?: string;
            street?: string;
            houseNumber?: string;
            addition?: string;
            postalCode?: string;
            photoUrl?: string;
            followers?: number;
            events?: number;
            xp?: number;
          };
        };
      };
    };
  };
  /** Get details of all events */
  getAllEvents: {
    parameters: {
      query: {
        /** Current offset */
        currentPage?: number;
        /** Start Date */
        startDate?: string;
        /** End Date */
        endDate?: string;
        /** eventType */
        eventType?: string[];
        /** Tags */
        tags?: string[];
        /** eventType */
        lat?: string;
        /** eventType */
        lng?: string;
        /** Flag indicating whether to consider the current time */
        now?: boolean;
        /** Search query */
        search?: string;
        /** Text search */
        $text?: {
          $search?: string;
        };
      };
    };
    responses: {
      /** Events retrieved successfully */
      200: {
        content: {
          "application/json": {
            hasNextPage?: boolean;
            events?: {
              eventIdentifier?: number;
              companyId?: string;
              eventTitle?: string;
              eventSummary?: string;
              eventDescription?: string;
              eventPhoto?: string[];
              themeId?: string;
              tag?: string[];
              eventTypeId?: string;
              eventTypeData?: {
                locations?: {
                  address?: string;
                  location?: {
                    coordinates?: number[];
                  };
                }[];
                easyTypeValue?: {
                  host?: string;
                  link?: string;
                  hostId?: string;
                };
                shop?: {
                  productReferance?: string;
                  productId?: string;
                  productOrderHook?: string;
                }[];
                donation?: {
                  requiredDonationAmount?: string;
                  bankName?: string;
                  accountTitle?: string;
                  address?: string;
                  anbiStatus?: boolean;
                };
              };
              eventMilestoneList?: {
                milestoneId?: string;
                milestoneValue?: string;
                milestoneData?: { [key: string]: any }[];
                xp?: number;
              }[];
              /** Number of XP for this event */
              xp?: number;
              isDraft?: boolean;
              eventLink?: string;
            }[];
          };
        };
      };
    };
  };
  /** Create Event */
  createEvent: {
    responses: {
      /** Created event successfully */
      200: {
        content: {
          "application/json": {
            eventId?: string;
            eventIdentifier?: number;
            companyId?: string;
            eventTitle?: string;
            eventSummary?: string;
            eventDescription?: string;
            eventPhoto?: string[];
            themeId?: string;
            tag?: string[];
            eventTypeId?: string;
            eventTypeData?: {
              locations?: {
                address?: string;
                location?: {
                  coordinates?: number[];
                };
              }[];
              easyTypeValue?: {
                easyEventId?: string;
                host?: string;
                link?: string;
                hostId?: string;
              };
              shop?: {
                productReferance?: string;
                productId?: string;
                productOrderHook?: string;
              }[];
              donation?: {
                requiredDonationAmount?: string;
                bankName?: string;
                accountTitle?: string;
                address?: string;
                anbiStatus?: boolean;
              };
            };
            eventMilestoneList?: {
              milestoneId?: string;
              milestoneValue?: string;
              milestoneData?: { [key: string]: any }[];
              xp?: number;
            }[];
            /** Number of XP for this event */
            xp?: number;
            eventLink?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          stepNumber?: string;
          eventId?: string;
          eventIdentifier?: number;
          /** Event title */
          eventTitle?: string;
          /** Event summary */
          eventSummary?: string;
          /** Event Description number */
          eventDescription?: string;
          /** Event photo urls */
          eventPhoto?: string[];
          /** Theme id used for this event */
          themeId?: string;
          /** Tags used for this event */
          tag?: string[];
          /** Event type id */
          eventTypeId?: string;
          /** Event type data */
          eventTypeData?: {
            /** Event location */
            locations?: {
              address?: string;
              location?: {
                coordinates?: number[];
              };
            }[];
            /** Event easy type value */
            easyTypeValue?: {
              easyEventId?: string;
              host?: string;
              link?: string;
              hostId?: string;
            };
            shop?: {
              productReference?: string;
              productId?: string;
              productOrderHook?: string;
            }[];
            donation?: {
              /** Donation amount */
              requiredDonationAmount?: string;
              /** Name of bank */
              bankName?: string;
              /** Account title */
              accountTitle?: string;
              address?: string;
              anbiStatus?: boolean;
            };
          };
          eventMilestoneList?: {
            /** Milestone id */
            milestoneId?: string;
            /** Milestone value */
            milestoneValue?: string;
            milestoneData?: { [key: string]: any }[];
            /** Number of XP for this milestone */
            xp?: number;
          }[];
          /** Number of XP for this event */
          xp?: number;
          eventLink?: string;
        };
      };
    };
  };
  /** Event Join History */
  eventJoinHistory: {
    parameters: {
      query: {
        /** friendId */
        friendId?: string;
      };
    };
    responses: {
      /** Get event history */
      200: {
        content: {
          "application/json": { [key: string]: any }[];
        };
      };
    };
  };
  /** Event Completed */
  eventCompleted: {
    responses: {
      /** User XP updated successfully */
      200: {
        content: {
          "application/json": {
            _id?: string;
            xp?: number;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          eventId?: string;
        };
      };
    };
  };
  /** Get details of single event */
  getSingleEvent: {
    parameters: {
      path: {
        /** ID of event to get details */
        id: string;
      };
    };
    responses: {
      /** Event retrieved successfully */
      200: {
        content: {
          "application/json": {
            eventIdentifier?: number;
            companyId?: string;
            eventTitle?: string;
            eventSummary?: string;
            eventDescription?: string;
            eventPhoto?: string[];
            themeId?: string;
            tag?: string[];
            eventTypeId?: string;
            eventTypeData?: {
              locationValue?: {
                address?: string;
                lat?: number;
                lng?: number;
              }[];
              easyTypeValue?: {
                host?: string;
                link?: string;
                hostId?: string;
              };
              shop?: {
                productReferance?: string;
                productId?: string;
                productOrderHook?: string;
              }[];
              donation?: {
                requiredDonationAmount?: string;
                bankName?: string;
                accountTitle?: string;
                address?: string;
                anbiStatus?: boolean;
              };
            };
            eventMilestoneList?: {
              milestoneId?: string;
              milestoneValue?: string;
              milestoneData?: { [key: string]: any }[];
              xp?: number;
            }[];
            /** Number of XP for this event */
            xp?: number;
            isDraft?: boolean;
            eventLink?: string;
          };
        };
      };
    };
  };
  /** Delete a Event by ID */
  deleteEvent: {
    parameters: {
      path: {
        /** ID of event to delete */
        id: string;
      };
    };
    responses: {
      /** Event deleted successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  getEventsByCompanyId: {
    parameters: {
      query: {
        isDraft?: string;
        /** Current offset */
        currentPage?: number;
      };
    };
    responses: {
      /** Events retrieved successfully */
      200: {
        content: {
          "application/json": {
            hasNextPage?: boolean;
            events?: {
              eventIdentifier?: number;
              companyId?: string;
              eventTitle?: string;
              eventSummary?: string;
              eventDescription?: string;
              eventPhoto?: string[];
              themeId?: string;
              tag?: string[];
              eventTypeId?: string;
              eventTypeData?: {
                locationValue?: {
                  address?: string;
                  lat?: number;
                  lng?: number;
                }[];
                easyTypeValue?: {
                  host?: string;
                  link?: string;
                  hostId?: string;
                };
                shop?: {
                  productReferance?: string;
                  productId?: string;
                  productOrderHook?: string;
                }[];
                donation?: {
                  requiredDonationAmount?: string;
                  bankName?: string;
                  accountTitle?: string;
                  address?: string;
                  anbiStatus?: boolean;
                };
              };
              eventMilestoneList?: {
                milestoneId?: string;
                milestoneValue?: string;
                milestoneData?: { [key: string]: any }[];
                xp?: number;
              }[];
              /** Number of XP for this event */
              xp?: number;
              isDraft?: boolean;
              eventLink?: string;
            }[][];
          };
        };
      };
    };
  };
  getEventReviews: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
      };
      query: {
        /** Current offset */
        currentPage?: number;
      };
    };
    responses: {
      /** Events reviews retrieved successfully */
      200: {
        content: {
          "application/json": {
            hasNextPage?: boolean;
            reviews?: { [key: string]: any }[][];
          };
        };
      };
    };
  };
  /** Check if already join this event */
  checkEventJoined: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** ID of user who wants to join */
        userId: string;
      };
    };
    responses: {
      /** Event joined already */
      200: {
        content: {
          "application/json": {
            joined?: string;
          };
        };
      };
    };
  };
  /** Join this event */
  joinEvent: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** ID of user who wants to join */
        userId: string;
      };
    };
    responses: {
      /** Event joined successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Get all event invites */
  getAllEventInvites: {
    parameters: {
      path: {
        eventId: string;
      };
      query: {
        /** get event invitees with pagination */
        currentPage?: number;
      };
    };
    responses: {
      /** Invitees retrieved successfully */
      200: {
        content: {
          "application/json": { [key: string]: any }[];
        };
      };
    };
  };
  /** Get all events join by my friends */
  getEventJoinByFriends: {
    parameters: {
      query: {
        /** get event join with pagination */
        currentPage?: number;
      };
    };
    responses: {
      /** Events joined by friends retrieved successfully */
      200: {
        content: {
          "application/json": { [key: string]: any }[];
        };
      };
    };
  };
  /** Send invitation to friend to join this event */
  inviteFriendEventJoin: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Invitation sender */
        senderId: string;
        /** Invitation receiver */
        receiverId: string;
        /** Milestone id */
        milestoneId: string;
      };
    };
    responses: {
      /** Invitation send successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Accept or reject event join invitation */
  inviteEventAcceptReject: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Invitation id */
        inviteId: string;
        /** accept or reject */
        status: string;
      };
    };
    responses: {
      /** Invitation accept or reject successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Get list of milestones completed for this event for logged user */
  getEventMilestonesCompleted: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
      };
    };
    responses: {
      /** Completed milestones retrieved successfully */
      200: {
        content: {
          "application/json": { [key: string]: any }[];
        };
      };
    };
  };
  /** Complete milestone */
  completeMilestoneInviteFriend: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Milestone id */
        milestoneId: string;
      };
    };
    responses: {
      /** Milestone completed successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Skip milestone */
  skipMilestoneInviteFriend: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Milestone id */
        milestoneId: string;
      };
    };
    responses: {
      /** Milestone skipped successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Complete datetime milestone */
  completeMilestoneDateTime: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Milestone id */
        milestoneId: string;
      };
    };
    responses: {
      /** Milestone datetime completed successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          notificationTime?: { [key: string]: any };
        };
      };
    };
  };
  /** User will manually checkin when he/she reach at event location */
  checkInEvent: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Milestone id */
        milestoneId: string;
      };
    };
    responses: {
      /** User checkedin successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Complete make photo milestone */
  completeMilestoneMakePhoto: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Milestone id */
        milestoneId: string;
      };
    };
    responses: {
      /** Make photo milestone completed successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** Photo url */
          photo?: string;
        };
      };
    };
  };
  /** Complete review milestone */
  completeMilestoneReview: {
    parameters: {
      path: {
        /** ID of event */
        eventId: string;
        /** Milestone id */
        milestoneId: string;
      };
    };
    responses: {
      /** Review milestone completed successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** Rating given */
          rating?: string;
          /** Review text */
          review?: string;
        };
      };
    };
  };
  /** Get All comments */
  getAllComments: {
    parameters: {
      path: {
        eventId: string;
      };
      query: {
        /** get comments with pagination */
        pageNo?: number;
      };
    };
    responses: {
      /** Comments retrieved successfully */
      200: {
        content: {
          "application/json": { [key: string]: any }[];
        };
      };
    };
  };
  createComment: {
    parameters: {
      path: {
        eventId: string;
      };
    };
    responses: {
      /** Created */
      201: {
        content: {
          "application/json": {
            userId?: string;
            eventId?: string;
            text?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          text?: string;
        };
      };
    };
  };
  addNewLike: {
    parameters: {
      path: {
        eventId: string;
      };
    };
    responses: {
      /** Created */
      201: {
        content: {
          "application/json": {
            userId?: string;
            eventId?: string;
          };
        };
      };
    };
  };
  addNewFavoriteEvent: {
    parameters: {
      path: {
        eventId: string;
      };
    };
    responses: {
      /** Added to favorites successfully */
      201: {
        content: {
          "application/json": {
            userId?: string;
            eventId?: string;
          };
        };
      };
    };
  };
  /** Get details of all milestones */
  getAllMilestones: {
    parameters: {
      query: {
        /** eventTypeId */
        eventTypeId?: string;
      };
    };
    responses: {
      /** Milestones retrieved successfully */
      200: {
        content: {
          "application/json": {
            milestoneName?: string;
            photoUrl?: string;
            xp?: number;
            completionTiming?: number;
            hasModal?: boolean;
          }[];
        };
      };
    };
  };
  /** create Milestone by super admin */
  createMilestone: {
    responses: {
      /** Created company account successfully */
      200: {
        content: {
          "application/json": {
            milestoneName?: string;
            photoUrl?: string;
            xp?: number;
            completionTiming?: number;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** Milestone name */
          milestoneName?: string;
          /** photo url of milestone */
          photoUrl?: string;
          /** Xp for milestone */
          xp?: number;
          /** completion timing for this milestone */
          completionTiming?: number;
          hasModal?: boolean;
          eventTypeIds?: string[];
        };
      };
    };
  };
  /** get Milestone */
  getSingleMilestone: {
    parameters: {
      path: {
        /** ID of Milestone to get details */
        id: string;
      };
    };
    responses: {
      /** get milestone successfully */
      200: {
        content: {
          "application/json": {
            milestoneName?: string;
            photoUrl?: string;
            xp?: number;
            completionTiming?: number;
            hasModal?: boolean;
          };
        };
      };
    };
  };
  /** Delete a Milestone by ID */
  deleteMilestone: {
    parameters: {
      path: {
        /** ID of Milestone to delete */
        id: string;
      };
    };
    responses: {
      /** Milestone deleted successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** update Milestone by super admin */
  updateMilestone: {
    parameters: {
      path: {
        /** ID of Milestone to update */
        id: string;
      };
    };
    responses: {
      /** milestone  updated successfully */
      200: {
        content: {
          "application/json": {
            milestoneName?: string;
            photoUrl?: string;
            xp?: number;
            completionTiming?: number;
            hasModal?: boolean;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** Milestone name to update */
          milestoneName?: string;
          /** milestone photo url to update */
          photoUrl?: string;
          /** milestone Xp to update */
          xp?: number;
          /** milestone completion timing to update */
          completionTiming?: number;
          hasModal?: boolean;
        };
      };
    };
  };
  /** Get All tags */
  getAllTags: {
    parameters: {
      query: {
        /** priority */
        priority?: Partial<boolean> & Partial<string>;
      };
    };
    responses: {
      /** tags retrieved successfully */
      200: {
        content: {
          "application/json": {
            /** tag content */
            tagText?: string;
          }[];
        };
      };
    };
  };
  /** create tag */
  createTag: {
    responses: {
      /** tag created successfully */
      200: {
        content: {
          "application/json": {
            /** tag content */
            tagText?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** tag content */
          tagText?: string;
        };
      };
    };
  };
  /** Get All Event types */
  getAllEventType: {
    responses: {
      /** EventTypes retrieved successfully */
      200: {
        content: {
          "application/json": {
            /** eventType name */
            eventTypeName?: string;
          }[];
        };
      };
    };
  };
  /** create net event type by super admin */
  createEventType: {
    responses: {
      /** Created company account successfully */
      200: {
        content: {
          "application/json": {
            /** eventType name */
            eventTypeName?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** eventType name */
          eventTypeName?: string;
        };
      };
    };
  };
  /** get Single EventType */
  getSingleEventType: {
    parameters: {
      path: {
        /** ID of EventType to get details */
        id: string;
      };
    };
    responses: {
      /** EventTypes retrieved successfully */
      200: {
        content: {
          "application/json": {
            eventTypeName?: string;
          };
        };
      };
    };
  };
  /** Delete a EventType by ID */
  deleteEventType: {
    parameters: {
      path: {
        /** ID of EventType to delete */
        id: string;
      };
    };
    responses: {
      /** EventType deleted successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** updateEventType */
  updateEventType: {
    parameters: {
      path: {
        /** ID of EventType to get details */
        id: string;
      };
    };
    responses: {
      /** update EventType successfully */
      200: {
        content: {
          "application/json": {
            eventTypeName?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** eventType name */
          eventTypeName?: string;
        };
      };
    };
  };
  /** Get details of all milestones */
  getAllThemes: {
    responses: {
      /** themes retrieved successfully */
      200: {
        content: {
          "application/json": {
            themeName?: string;
            photoUrl?: string;
          }[];
        };
      };
    };
  };
  /** create a new theme by super admin */
  createTheme: {
    responses: {
      /** Created theme successfully */
      200: {
        content: {
          "application/json": {
            themeName?: string;
            photoUrl?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** Theme name */
          themeName?: string;
          /** photo url of theme */
          photoUrl?: string;
        };
      };
    };
  };
  /** get Theme */
  getSingleTheme: {
    parameters: {
      path: {
        /** ID of theme to get details */
        id: string;
      };
    };
    responses: {
      /** theme retrieved successfully */
      200: {
        content: {
          "application/json": {
            themeName?: string;
            photoUrl?: string;
          };
        };
      };
    };
  };
  /** Delete Theme by ID */
  deleteTheme: {
    parameters: {
      path: {
        /** ID of Theme to delete */
        id: string;
      };
    };
    responses: {
      /** theme deleted successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** update Theme by super admin */
  updateTheme: {
    parameters: {
      path: {
        /** Theme ID to update */
        id: string;
      };
    };
    responses: {
      /** Theme updated successfully */
      200: {
        content: {
          "application/json": {
            themeName?: string;
            photoUrl?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** Theme name */
          themeName?: string;
          /** photo url of theme */
          photoUrl?: string;
        };
      };
    };
  };
  /** Get details of all easy event */
  getAllEasyEvent: {
    responses: {
      /** Easy event retrieved successfully */
      200: {
        content: {
          "application/json": {
            keyword?: string;
            title?: string;
            hasMeta?: boolean;
          }[];
        };
      };
    };
  };
  /** Create easy event */
  createEasyEvent: {
    responses: {
      /** easy event created successfully */
      200: {
        content: {
          "application/json": {
            keyword?: string;
            title?: string;
            hasMeta?: boolean;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          keyword?: string;
          title?: string;
          hasMeta?: boolean;
        };
      };
    };
  };
  /** List all contacts */
  getAllContacts: {
    parameters: {
      query: {
        /** first or last name */
        searchTerm?: string;
        /** Current offset */
        currentPage?: number;
      };
    };
    responses: {
      /** List of all contacts */
      200: {
        content: {
          "application/json": {
            hasNextPage?: boolean;
            contacts?: {
              _id?: string;
              firstName?: string;
              lastName?: string;
              email?: string;
              phone?: string;
              createdAt?: string;
              updatedAt?: string;
              userName?: string;
              gender?: string;
              dateOfBirth?: string;
              photoUrl?: string;
            }[];
          };
        };
      };
    };
  };
  /** Get all friend list */
  getAllFriends: {
    parameters: {
      query: {
        /** first or last name */
        searchTerm?: string;
        /** Current offset */
        currentPage?: number;
      };
    };
    responses: {
      /** Get results of friend list */
      200: {
        content: {
          "application/json": {
            _id?: string;
            firstName?: string;
            lastName?: string;
            email?: string;
            phone?: string;
            createdAt?: string;
            updatedAt?: string;
            userName?: string;
            gender?: string;
            dateOfBirth?: string;
            photoUrl?: string;
            isFriend?: boolean;
          }[];
        };
      };
    };
  };
  /** Get all friend requests */
  getAllFriendRequests: {
    parameters: {
      query: {
        /** Current offset */
        currentPage?: number;
      };
    };
    responses: {
      /** Get results of friend requests */
      200: {
        content: {
          "application/json": {
            hasNextPage?: boolean;
            friendRequests?: {
              _id?: string;
              firstName?: string;
              lastName?: string;
              email?: string;
              phone?: string;
              createdAt?: string;
              updatedAt?: string;
              userName?: string;
              gender?: string;
              dateOfBirth?: string;
              photoUrl?: string;
            }[];
          };
        };
      };
    };
  };
  /** Create a new friend */
  createNewFriend: {
    responses: {
      /** New friend created successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          friendId?: string;
        };
      };
    };
  };
  /** Delete a Friend by ID */
  deleteFriend: {
    parameters: {
      path: {
        /** ID of Friend to remove */
        id: string;
      };
    };
    responses: {
      /** Friend deleted successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Accept or reject friend request */
  friendAcceptReject: {
    parameters: {
      path: {
        /** Friend id of request to accept or reject */
        id: string;
        /** accept or reject */
        status: string;
        /** notification id */
        notificationId: string;
      };
    };
    responses: {
      /** Friend request accept or reject successfully */
      200: {
        content: {
          "application/json": {
            message?: string;
          };
        };
      };
    };
  };
  /** Contact Details */
  getContactDetailsById: {
    parameters: {
      path: {
        /** ID of Contact Details */
        id: string;
      };
    };
    responses: {
      /** Get Contact Details */
      200: {
        content: {
          "application/json": {
            firstName?: string;
            lastName?: string;
            email?: string;
            phone?: string;
            createdAt?: string;
            updatedAt?: string;
            userName?: string;
            gender?: string;
            dateOfBirth?: string;
            photoUrl?: string;
            about?: string;
            xp?: number;
            companyId?: string;
            allowPeopleToConnect?: boolean;
            pushAlerts?: boolean;
            address?: string;
            profession?: string;
            isFriend?: boolean;
          };
        };
      };
    };
  };
  /** Get all user notification */
  getNotification: {
    parameters: {
      query: {
        /** Current offset */
        currentPage?: number;
      };
    };
    responses: {
      /** Get results of user notifications */
      200: {
        content: {
          "application/json": {
            hasNextPage?: boolean;
            notifications?: {
              _id?: string;
              notifycationType?: string;
              notificationText?: string;
              extraInfo?: { [key: string]: any };
              readStatus?: string;
            }[];
          };
        };
      };
    };
  };
  /** Get all shops */
  getShop: {
    parameters: {
      query: {
        /** searchTerm */
        searchTerm?: string;
        /** Current offset */
        currentPage?: number;
      };
    };
    responses: {
      /** Get results of shop */
      200: {
        content: {
          "application/json": { [key: string]: any };
        };
      };
    };
  };
}
